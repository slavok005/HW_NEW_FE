// –û—Ü–µ–Ω–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º–∞

// task #1
// START
// READ number n
// IF n == 1 THEN return
// FOR i = 1, i <= n, i + 1
// 	FOR j = 1; j <= n, j + 1
// 		print "*"
// 		BREAK
// –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –æ–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –º–æ–∂–Ω–æ –≤—ã—Ä–∞–∑–∏—Ç—å –∫–∞–∫ —Å—É–º–º—É –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞:

// T(n)=O(1)+O(1)+O(n)=O(n)


// 2.–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –æ–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–æ–∂–Ω–æ –≤—ã—Ä–∞–∑–∏—Ç—å –∫–∞–∫:


// T(n)=O(n)√óO(logn)√óO(1)=O(nlogn)

// –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –∞—Å–∏–º–ø—Ç–æ—Ç–∏—á–µ—Å–∫–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 

// O(nlogn).


//3. START
// READ number n
// number a = 0
// FOR i = 0, i < n, i + 1
// 	FOR j = n, j > i, j - 1
// 		a = a + i + j
//         –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –∞—Å–∏–º–ø—Ç–æ—Ç–∏—á–µ—Å–∫–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 
// ùëÇ(n2) –≤ –∫–≤–∞–¥—Ä–∞—Ç–µ

// 4.START
// READ number n
// numbers a = 0, i = n
// WHILE i > 0
// 	a = a + i
// 	i = i / 2
//     –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –æ–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –º–æ–∂–Ω–æ –≤—ã—Ä–∞–∑–∏—Ç—å –∫–∞–∫:

//     ùëá(ùëõ)=ùëÇ(log‚Å°2(ùëõ))
       
//     –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –∞—Å–∏–º–ø—Ç–æ—Ç–∏—á–µ—Å–∫–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 
   
//     O(logn).